name: Go Release

on:
  workflow_dispatch:
  push:
    # 触发条件：当推送到 master 分支或创建新标签时运行
    tags:
      - 'v*'

jobs:
  build-and-release:
    runs-on: ubuntu-22.04

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Install MinGW-w64
      run: |
        sudo apt-get update
        sudo apt-get install -y mingw-w64

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: 1.21.x  # 使用所需的 Go 版本
        cache: true

    - name: Install Node.js
      uses: actions/setup-node@v3
      with:
        node-version: 18  # 使用所需的 Node.js 版本
        cache: 'npm'

    - name: Install Bee tool
      run: |
        go install github.com/beego/bee/v2@latest

    # 构建前端应用
    - name: Build frontend
      working-directory: ./go_binance_futures_ui
      run: |
        npm install
        npm run build
        mv dist ../frontend_dist

    # 构建后端应用
    - name: Build backend
      run: |
        export GOOS=linux
        export GOARCH=amd64
        export CGO_ENABLED=1
        bee pack -exr='.*.tar.gz' -a backend_linux_amd64_feature -be GOOS=$GOOS GOARCH=$GOARCH
        tar -xzf backend_linux_amd64_feature.tar.gz -C ./backend_build/

    # 整合前端和后端
    - name: Integrate frontend and backend
      run: |
        mkdir -p ./release_package
        mv ./backend_build/* ./release_package/
        mv ./frontend_dist ./release_package/static
        cd ./release_package
        tar -czvf unified_release.tar.gz *

    # 发布到 GitHub Release
    - name: Release Tag
      uses: softprops/action-gh-release@v2
      if: startsWith(github.ref, 'refs/tags/')
      with:
        draft: false
        prerelease: false
        files: |
          release_package/unified_release.tar.gz
      env:
        GITHUB_TOKEN: ${{ secrets.WORKFLOW_PERSONAL_ACCESS_TOKEN }}
